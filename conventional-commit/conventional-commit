#!/bin/sh
# =============================================================================
# BSD 2-Clause License
#
# Copyright (c) 2019, Veaceslav Medvedev
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#  list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#  this list of conditions and the following disclaimer in the documentation
#  and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
# OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# =============================================================================

FCR='\033[1;31m' # Red
FCG='\033[1;32m' # Green
FCY='\033[0;33m' # Yellow
FCS='\033[0;37m' # Light gray (silver)
NC='\033[0m'

CMD="conventional-commit"
VERSION="1.0.0"
HOME="https://github.com/slavcodev/git-hooks-scripts"
ABOUT="${FCG}Conventional commit title${NC} version ${FCY}$VERSION${NC}"
HELP="$ABOUT

Git 'commit-msg' hook that looks for patterns the branch name
and uses the matches as prefix or suffix of every commit title.

This is useful if you have convention to use issue number in the branch,
and want to add it automatically to the commit title.
For example, you have branch like 'FOO-9999-add-hook', on adding the commit 'Add Hook,
the hook may add suffix 'Add Hook (FOO-9999)' or prefix '[FOO-9999] Add Hook'.

Note: you can use 'commit --no-verify' to skip 'commit-msg' hooks.

${FCY}Example of config:${NC}
${FCS}~~~
[${CMD}]
  excluded-branch = master
  excluded-branch = development
  prefix-pattern = "FOO-[0-9]+"
  suffix-pattern = "FOO-[0-9]+"
~~~${NC}

$HOME

> Enjoy coding ❤️"

report_start() {
  echo "${FCG}$@${NC}"
}

report_error() {
  echo "${FCR}$@${NC}"
}

report_done() {
  [[ $# > 0 ]] && echo "${FCG}✓ $@${NC}" || echo "${FCG}✓ Done${NC}"
}

main() {
  prefix_pattern=$(git config --get conventional-commit.prefix-pattern)
  suffix_pattern=$(git config --get conventional-commit.suffix-pattern)

  if [[ -z ${prefix_pattern} && -z ${suffix_pattern} ]]; then
    exit
  fi

  branch_name=$(git rev-parse --abbrev-ref HEAD)

  excluded_branches=$(git config --get-all conventional-commit.excluded-branch)

  if [[ -z ${excluded_branches} ]]; then
    excluded_branches="master"
  fi

  for excluded_branch in ${excluded_branches} ; do
    if [[ "${branch_name}" =~ "${excluded_branch}" ]]; then
      exit
    fi
  done

  commit_file=$1
  commit_title=$(head -n 1 "${commit_file}")

  if [[ -z "${commit_title}" ]]; then
    exit
  fi

  prefix=$(echo "${branch_name}" | grep -Eo "${prefix_pattern}")
  suffix=$(echo "${branch_name}" | grep -Eo "${suffix_pattern}")

  if [[ -z "${prefix}" && -z "${suffix}" ]]; then
    exit
  fi

  prefix_exists=$(echo "${commit_title}" | grep -o "^\[${prefix}\] ")
  suffix_exists=$(echo "${commit_title}" | grep -o " (${suffix})$")

  commit_title=${commit_title#*]}  # remove prefix ending in "."
  commit_title=${commit_title%(*}  # remove suffix starting with "."

  if [[ -z "${prefix_exists}" ]]; then
    echo "Adding prefix '${prefix}' to the commit title..."
    sed -i -e 's/'"${commit_title}"'/'"[${prefix}] ${commit_title}"'/g' "${commit_file}"
  else
    echo "Prefix '${prefix}' already exists, skipping..."
  fi

  if [[ -z "${suffix_exists}" ]]; then
    echo "Adding suffix '${suffix}' to the commit title..."
    sed -i -e 's/'"${commit_title}"'/'"${commit_title} (${suffix})"'/g' "${commit_file}"
  else
    echo "Suffix '${suffix}' already exists, skipping..."
  fi

  echo "Title was changed to '$(head -n 1 "${commit_file}")'"

  report_done

  exit $?
}

case "$1" in
  -h|--help|-? )
    echo "${HELP}"
    ;;
  * )
    main
esac
